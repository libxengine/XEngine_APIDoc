<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>XClient_TCPSelect_Create</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 11pt;
}
</style>

</head>

<body>
<H1 >
 函数</H1>
<P >
  XClient_TCPSelect_Create</P>

<H1>功能</H1> 
 <P>             创建一个客户端</P>
<H1>语法</H1>
<P>BOOL XClient_TCPSelect_Create(SOCKET * phSocket, LPCSTR 
lpszAddr, int nPort, int nTimeout = 0, LPCSTR lpszBindAddr = NULL, int nBindPort 
= 0, int nIPVer = 2)</P>
<P></P>
<P></P>
<H1>参数</H1>
<P>&nbsp;参数.一：phSocket<BR>&nbsp; In/Out：Out<BR>&nbsp; 
类型：套接字句柄<BR>&nbsp; 可空：N<BR>&nbsp; 意思：创建成功的套接字<BR>&nbsp;参数.二：lpszAddr<BR>&nbsp; 
In/Out：In<BR>&nbsp; 类型：常量字符指针<BR>&nbsp; 可空：N<BR>&nbsp; 
意思：要连接到的服务器<BR>&nbsp;参数.三：nPort<BR>&nbsp; In/Out：In<BR>&nbsp; 类型：整数型<BR>&nbsp; 
可空：N<BR>&nbsp; 意思：要连接到的端口<BR>&nbsp;参数.四：nTimeout<BR>&nbsp; In/Out：In<BR>&nbsp; 
类型：整数型<BR>&nbsp; 可空：Y<BR>&nbsp; 
意思：链接超时时间,单位秒<BR>&nbsp;参数.五：lpszBindAddr<BR>&nbsp; In/Out：In<BR>&nbsp; 
类型：常量字符指针<BR>&nbsp; 可空：Y<BR>&nbsp; 
意思：输入要指定的网卡地址<BR>&nbsp;参数.六：nBindPort<BR>&nbsp; In/Out：In<BR>&nbsp; 
类型：常量字符指针<BR>&nbsp; 可空：Y<BR>&nbsp; 意思：输入要指定的端口<BR>&nbsp;参数.七：nIPVer<BR>&nbsp; 
In/Out：In<BR>&nbsp; 类型：整数型<BR>&nbsp; 可空：Y<BR>&nbsp; 意思：要使用的IP版本</P>
<P></P>
<H1>返回值</H1>
<P>类型：逻辑型<BR>意思：是否成功</P>
<H1>备注</H1>
<P>此模型套接字客户端 可以创建多个客户端，但是无安全属性，无线程管理，无多客户端自动管理</P>
<H1>示例</H1>
<DIV 
style="FONT-SIZE: 12px; FONT-FAMILY: Consolas, 'Courier New', monospace; WHITE-SPACE: pre; FONT-WEIGHT: normal; COLOR: #000000; LINE-HEIGHT: 16px; BACKGROUND-COLOR: #fffffe">
<DIV><SPAN style="COLOR: #0000ff">int</SPAN><SPAN style="COLOR: #000000"> 
TCPTest()</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">{</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">int</SPAN><SPAN style="COLOR: #000000"> nMsgLen = 
</SPAN><SPAN style="COLOR: #09885a">10240</SPAN><SPAN 
style="COLOR: #000000">;</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;TCHAR 
tszSDBuffer[</SPAN><SPAN style="COLOR: #09885a">10000</SPAN><SPAN 
style="COLOR: #000000">];</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;TCHAR 
tszMsgBuffer[</SPAN><SPAN style="COLOR: #09885a">10240</SPAN><SPAN 
style="COLOR: #000000">];</SPAN></DIV><BR>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;memset(tszSDBuffer, 
</SPAN><SPAN style="COLOR: #a31515">'</SPAN><SPAN 
style="COLOR: #000000">\</SPAN><SPAN style="COLOR: #09885a">0</SPAN><SPAN 
style="COLOR: #a31515">'</SPAN><SPAN style="COLOR: #000000">, </SPAN><SPAN 
style="COLOR: #0000ff">sizeof</SPAN><SPAN 
style="COLOR: #000000">(tszSDBuffer));</SPAN></DIV><BR>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;SOCKET 
m_Socket;</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">if</SPAN><SPAN style="COLOR: #000000"> 
(!XClient_TCPSelect_Create(&amp;m_Socket, _T(</SPAN><SPAN 
style="COLOR: #a31515">"127.0.0.1"</SPAN><SPAN style="COLOR: #000000">), 
</SPAN><SPAN style="COLOR: #09885a">5000</SPAN><SPAN 
style="COLOR: #000000">))</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;{</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(_T(</SPAN><SPAN 
style="COLOR: #a31515">"连接失败！\n"</SPAN><SPAN 
style="COLOR: #000000">));</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">return</SPAN><SPAN style="COLOR: #000000"> -</SPAN><SPAN 
style="COLOR: #09885a">1</SPAN><SPAN style="COLOR: #000000">;</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;}</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;memset(tszMsgBuffer, 
</SPAN><SPAN style="COLOR: #a31515">'</SPAN><SPAN 
style="COLOR: #000000">\</SPAN><SPAN style="COLOR: #09885a">0</SPAN><SPAN 
style="COLOR: #a31515">'</SPAN><SPAN style="COLOR: #000000">, </SPAN><SPAN 
style="COLOR: #0000ff">sizeof</SPAN><SPAN 
style="COLOR: #000000">(tszMsgBuffer));</SPAN></DIV><BR>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;XENGINE_PROTOCOLHDR 
st_ProtocolHdr;</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;memset(&amp;st_ProtocolHdr, 
</SPAN><SPAN style="COLOR: #a31515">'</SPAN><SPAN 
style="COLOR: #000000">\</SPAN><SPAN style="COLOR: #09885a">0</SPAN><SPAN 
style="COLOR: #a31515">'</SPAN><SPAN style="COLOR: #000000">, </SPAN><SPAN 
style="COLOR: #0000ff">sizeof</SPAN><SPAN 
style="COLOR: #000000">(XENGINE_PROTOCOLHDR));</SPAN></DIV><BR>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;st_ProtocolHdr.wHeader 
= XENGIEN_COMMUNICATION_PACKET_PROTOCOL_HEADER;</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;st_ProtocolHdr.xhToken 
= </SPAN><SPAN style="COLOR: #09885a">0</SPAN><SPAN 
style="COLOR: #000000">;</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;st_ProtocolHdr.unOperatorType = 
ENUM_XENGINE_COMMUNICATION_PROTOCOL_TYPE_AUTH;</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;st_ProtocolHdr.unOperatorCode = 
</SPAN><SPAN style="COLOR: #3030c0">0x2001</SPAN><SPAN 
style="COLOR: #000000">;</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;st_ProtocolHdr.unPacketSize = 
</SPAN><SPAN style="COLOR: #09885a">0</SPAN><SPAN 
style="COLOR: #000000">;</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;st_ProtocolHdr.byVersion = 
</SPAN><SPAN style="COLOR: #09885a">1</SPAN><SPAN 
style="COLOR: #000000">;</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;st_ProtocolHdr.byIsReply = 
TRUE;</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;st_ProtocolHdr.wReserve = 
</SPAN><SPAN style="COLOR: #09885a">0</SPAN><SPAN 
style="COLOR: #000000">;</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;st_ProtocolHdr.wPacketSerial = 
</SPAN><SPAN style="COLOR: #09885a">0</SPAN><SPAN 
style="COLOR: #000000">;</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;st_ProtocolHdr.wTail = 
XENGIEN_COMMUNICATION_PACKET_PROTOCOL_TAIL;</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">if</SPAN><SPAN style="COLOR: #000000"> 
(XClient_TCPSelect_SendMsg(m_Socket, (LPCTSTR)&amp;st_ProtocolHdr, </SPAN><SPAN 
style="COLOR: #0000ff">sizeof</SPAN><SPAN 
style="COLOR: #000000">(XENGINE_PROTOCOLHDR)))</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;{</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(</SPAN><SPAN 
style="COLOR: #a31515">"NetClient_TCPSelect_SendMsg:%d\n"</SPAN><SPAN 
style="COLOR: #000000">, nMsgLen);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;}</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">if</SPAN><SPAN style="COLOR: #000000"> 
(XClient_TCPSelect_SendMsg(m_Socket, </SPAN><SPAN 
style="COLOR: #a31515">"123"</SPAN><SPAN style="COLOR: #000000">, </SPAN><SPAN 
style="COLOR: #09885a">3</SPAN><SPAN style="COLOR: #000000">))</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;{</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(</SPAN><SPAN 
style="COLOR: #a31515">"NetClient_TCPSelect_SendMsg:123\n"</SPAN><SPAN 
style="COLOR: #000000">);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;}</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;XClient_TCPSelect_Close(m_Socket);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">return</SPAN><SPAN style="COLOR: #000000"> </SPAN><SPAN 
style="COLOR: #09885a">1</SPAN><SPAN style="COLOR: #000000">;</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">}</SPAN></DIV></DIV></body>
</html>
