<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Algorithm_Calculation_Create</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 11pt;
}
</style>

</head>

<body>
<H1 >
 函数</H1>
<P >
  Algorithm_Calculation_Create</P>

<H1>功能</H1> 
 <P>             创建一个计算函数</P>
<H1>语法</H1>
<P>XHANDLE Algorithm_Calculation_Create(int nTraceTime = 
0)</P>
<P></P>
<P></P>
<H1>参数</H1>
<P>&nbsp;参数.一：nTraceTime<BR>&nbsp; In/Out：In<BR>&nbsp; 
类型：整数型<BR>&nbsp; 可空：N<BR>&nbsp; 意思：输入追溯时间范围,单位:秒</P>
<P></P>
<H1>返回值</H1>
<P>类型：句柄<BR>意思：返回句柄数据,失败,返回NULL</P>
<H1>备注</H1>
<P>追溯模式可以计算多少秒内的平均次数或者流量</P>
<H1>示例</H1>
<DIV 
style="FONT-SIZE: 12px; FONT-FAMILY: Consolas, 'Courier New', monospace; WHITE-SPACE: pre; FONT-WEIGHT: normal; COLOR: #000000; LINE-HEIGHT: 16px; BACKGROUND-COLOR: #fffffe">
<DIV><SPAN style="COLOR: #0000ff">int</SPAN><SPAN style="COLOR: #000000"> 
Test_Calulation()</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">{</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;XHANDLE xhToken = 
Algorithm_Calculation_Create(</SPAN><SPAN style="COLOR: #09885a">3</SPAN><SPAN 
style="COLOR: #000000">);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">if</SPAN><SPAN style="COLOR: #000000"> (NULL == 
xhToken)</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;{</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">return</SPAN><SPAN style="COLOR: #000000"> </SPAN><SPAN 
style="COLOR: #09885a">0</SPAN><SPAN style="COLOR: #000000">;</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;}</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">for</SPAN><SPAN style="COLOR: #000000"> (</SPAN><SPAN 
style="COLOR: #0000ff">int</SPAN><SPAN style="COLOR: #000000"> i = </SPAN><SPAN 
style="COLOR: #09885a">0</SPAN><SPAN style="COLOR: #000000">; i &lt; 
</SPAN><SPAN style="COLOR: #09885a">10</SPAN><SPAN style="COLOR: #000000">; 
i++)</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;{</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Algorithm_Calculation_SetTime(xhToken);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;}</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;std::this_thread::sleep_for(std::chrono::seconds(</SPAN><SPAN 
style="COLOR: #09885a">2</SPAN><SPAN style="COLOR: #000000">));</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;__int64u nTime = 
</SPAN><SPAN style="COLOR: #09885a">0</SPAN><SPAN 
style="COLOR: #000000">;</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;Algorithm_Calculation_GetTime(xhToken, 
&amp;nTime);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;printf(</SPAN><SPAN 
style="COLOR: #a31515">"%llu\n"</SPAN><SPAN style="COLOR: #000000">, 
nTime);</SPAN></DIV><BR>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;Algorithm_Calculation_ResetTime(xhToken);</SPAN></DIV><BR>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">for</SPAN><SPAN style="COLOR: #000000"> (</SPAN><SPAN 
style="COLOR: #0000ff">int</SPAN><SPAN style="COLOR: #000000"> i = </SPAN><SPAN 
style="COLOR: #09885a">0</SPAN><SPAN style="COLOR: #000000">; i &lt; 
</SPAN><SPAN style="COLOR: #09885a">10</SPAN><SPAN style="COLOR: #000000">; 
i++)</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;{</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__int64u 
nFlow = </SPAN><SPAN style="COLOR: #09885a">0</SPAN><SPAN 
style="COLOR: #000000">;</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Algorithm_Calculation_ADDRVFlow(xhToken, 
rand());</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Algorithm_Calculation_ADDRVFlow(xhToken, 
rand());</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std::this_thread::sleep_for(std::chrono::seconds(</SPAN><SPAN 
style="COLOR: #09885a">2</SPAN><SPAN style="COLOR: #000000">));</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Algorithm_Calculation_GetRVFlow(xhToken, 
&amp;nFlow);</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(</SPAN><SPAN 
style="COLOR: #a31515">"%llu\n"</SPAN><SPAN style="COLOR: #000000">, 
nFlow);</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Algorithm_Calculation_GetRVFlow(xhToken, 
&amp;nFlow, TRUE);</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(</SPAN><SPAN 
style="COLOR: #a31515">"%llu\n"</SPAN><SPAN style="COLOR: #000000">, 
nFlow);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;}</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;Algorithm_Calculation_Close(xhToken);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">return</SPAN><SPAN style="COLOR: #000000"> </SPAN><SPAN 
style="COLOR: #09885a">0</SPAN><SPAN style="COLOR: #000000">;</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">}</SPAN></DIV></DIV></body>
</html>
