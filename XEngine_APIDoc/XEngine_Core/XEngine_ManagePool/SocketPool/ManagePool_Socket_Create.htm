<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>ManagePool_Socket_Create</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 11pt;
}
</style>

</head>

<body>
<H1>函数 </H1>
<P>
ManagePool_Socket_Create
</P>
<H1>
功能 

</H1>
<P>创建一个连接池</P>
<H1 >
 语法</H1>
<P >
  BOOL ManagePool_Socket_Create(XNETHANDLE *pxhPool, DWORD 
dwSocketNumber, DWORD dwSocket = NETENGINE_MANAGEPOOL_SOCKET_IN_TYPE_TCPV4)</P>

<P></P> 
 <P>             </P>
<H1>参数</H1>
<P>&nbsp;参数.一：pxhPool<BR>&nbsp; In/Out：In/Out<BR>&nbsp; 
类型：连接池句柄指针<BR>&nbsp; 可空：N<BR>&nbsp; 
意思：导出一个新分配的连接池句柄<BR>&nbsp;参数.二：dwSocketNumber<BR>&nbsp; In/Out：In<BR>&nbsp; 
类型：双字<BR>&nbsp; 可空：N<BR>&nbsp; 意思：要创建的套接字个数<BR>&nbsp;参数.三：dwSocket<BR>&nbsp; 
In/Out：In<BR>&nbsp; 类型：双字<BR>&nbsp; 可空：Y<BR>&nbsp; 意思：套接字属性，默认给你设置为TCP V4版本</P>
<P></P>
<H1>返回值</H1>
<P>类型：逻辑型<BR>意思：是否成功</P>
<H1>备注</H1>
<P>使用了我们的连接池后，套接字全部交由我们来管理，你不需要并且不能管理套接字</P>
<H1>示例</H1>
<DIV 
style="FONT-SIZE: 12px; FONT-FAMILY: Consolas, 'Courier New', monospace; WHITE-SPACE: pre; FONT-WEIGHT: normal; COLOR: #000000; LINE-HEIGHT: 16px; BACKGROUND-COLOR: #fffffe">
<DIV><SPAN style="COLOR: #000000">
<DIV 
style="FONT-SIZE: 12px; FONT-FAMILY: Consolas, 'Courier New', monospace; WHITE-SPACE: pre; FONT-WEIGHT: normal; COLOR: #000000; LINE-HEIGHT: 16px; BACKGROUND-COLOR: #fffffe">
<DIV><SPAN style="COLOR: #0000ff">void</SPAN><SPAN style="COLOR: #000000"> 
SocketPool_Test()</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">{</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;XNETHANDLE xhPool = 
</SPAN><SPAN style="COLOR: #09885a">0</SPAN><SPAN 
style="COLOR: #000000">;</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">if</SPAN><SPAN style="COLOR: #000000"> 
(!ManagePool_Socket_Create(&amp;xhPool, </SPAN><SPAN 
style="COLOR: #09885a">100</SPAN><SPAN style="COLOR: #000000">))</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;{</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(</SPAN><SPAN 
style="COLOR: #a31515">"ManagePool_Socket_Create!@\n"</SPAN><SPAN 
style="COLOR: #000000">);</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">return</SPAN><SPAN style="COLOR: #000000">;</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;}</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;SOCKET hSocket = 
INVALID_SOCKET;</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">if</SPAN><SPAN style="COLOR: #000000"> 
(!ManagePool_Socket_GetIdleSocket(xhPool, &amp;hSocket))</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;{</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(</SPAN><SPAN 
style="COLOR: #a31515">"ManagePool_Socket_GetIdleSocket!@\n"</SPAN><SPAN 
style="COLOR: #000000">);</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">return</SPAN><SPAN style="COLOR: #000000">;</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;}</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;sockaddr_in 
st_SockProxy;</SPAN></DIV><BR>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;st_SockProxy.sin_addr.s_addr = 
inet_addr(</SPAN><SPAN style="COLOR: #a31515">"192.168.1.4"</SPAN><SPAN 
style="COLOR: #000000">);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;st_SockProxy.sin_port 
= htons(</SPAN><SPAN style="COLOR: #09885a">5002</SPAN><SPAN 
style="COLOR: #000000">);</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;st_SockProxy.sin_family = 
AF_INET;</SPAN></DIV><BR>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">if</SPAN><SPAN style="COLOR: #000000"> (SOCKET_ERROR == 
connect(hSocket, (sockaddr*)&amp;st_SockProxy, </SPAN><SPAN 
style="COLOR: #0000ff">sizeof</SPAN><SPAN 
style="COLOR: #000000">(st_SockProxy)))</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;{</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;}</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;send(hSocket, 
</SPAN><SPAN style="COLOR: #a31515">"hello"</SPAN><SPAN style="COLOR: #000000">, 
</SPAN><SPAN style="COLOR: #09885a">5</SPAN><SPAN style="COLOR: #000000">, 
</SPAN><SPAN style="COLOR: #09885a">0</SPAN><SPAN 
style="COLOR: #000000">);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">if</SPAN><SPAN style="COLOR: #000000"> 
(!ManagePool_Socket_RetIdleSocket(xhPool, hSocket))</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;{</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(</SPAN><SPAN 
style="COLOR: #a31515">"ManagePool_Socket_GetIdleSocket!@\n"</SPAN><SPAN 
style="COLOR: #000000">);</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">return</SPAN><SPAN style="COLOR: #000000">;</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;}</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;ManagePool_Socket_Destroy(xhPool);</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">}</SPAN></DIV></DIV></SPAN></DIV></DIV></body>
</html>
