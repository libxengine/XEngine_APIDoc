<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>ManagePool_Memory_Create</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 11pt;
}
</style>

</head>

<body>
<H1>函数</H1>
<P>ManagePool_Memory_Create</P>
<H1>功能</H1>
<P>创建一个内存池</P>
<H1>
语法
</H1>
<P>
XMPOOL ManagePool_Memory_Create(size_t nSize = 4096, 
size_t nEstimateSize = 102400, size_t nMaxSize = 256)

</P>
<P></P>
<P ></P>
<H1 >
  参数</H1>

<P>&nbsp;参数.一：nSize<BR>&nbsp; In/Out：In<BR>&nbsp; 
类型：无符号整数型<BR>&nbsp; 可空：N<BR>&nbsp; 
意思：要初始化内存池的大小<BR>&nbsp;参数.二：nEstimateSize<BR>&nbsp; In/Out：In<BR>&nbsp; 
类型：无符号整数型<BR>&nbsp; 可空：Y<BR>&nbsp; 
意思：预测单个内存最大大小,为0不启用内存预测<BR>&nbsp;参数.三：nMaxSize<BR>&nbsp; In/Out：In<BR>&nbsp; 
类型：无符号整数型<BR>&nbsp; 可空：Y<BR>&nbsp; 意思：最大允许内存池大小,超过将无法允许申请内存,为0 不启用,单位MB</P>
<P></P>
<H1>返回值</H1>
<P>类型：内存池句柄<BR>意思：成功返回句柄，失败返回NULL</P>
<H1>备注</H1>
<P>内存池非线程安全</P>
<H1>示例</H1>
<DIV 
style="FONT-SIZE: 12px; FONT-FAMILY: Consolas, 'Courier New', monospace; WHITE-SPACE: pre; FONT-WEIGHT: normal; COLOR: #000000; LINE-HEIGHT: 16px; BACKGROUND-COLOR: #fffffe">
<DIV><SPAN style="COLOR: #0000ff">int</SPAN><SPAN style="COLOR: #000000"> 
MemoryPool_Test()</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">{</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;XMPOOL 
xmPool;</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;MANAGEPOOL_MEMORY_CLEANUP 
st_Cleanup;</SPAN></DIV><BR>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">char</SPAN><SPAN style="COLOR: #000000">* p1, * p2, * p3, 
* p4;</SPAN></DIV><BR>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;xmPool = 
ManagePool_Memory_Create();</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;p1 = (</SPAN><SPAN 
style="COLOR: #0000ff">char</SPAN><SPAN 
style="COLOR: #000000">*)ManagePool_Memory_Alloc(xmPool, </SPAN><SPAN 
style="COLOR: #09885a">416</SPAN><SPAN style="COLOR: #000000">); </SPAN><SPAN 
style="COLOR: #008000">/*分配内存，在可分配内*/</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;memcpy(p1, 
</SPAN><SPAN style="COLOR: #a31515">"p1"</SPAN><SPAN style="COLOR: #000000">, 
</SPAN><SPAN style="COLOR: #09885a">2</SPAN><SPAN 
style="COLOR: #000000">);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;printf(</SPAN><SPAN 
style="COLOR: #a31515">"%s\n"</SPAN><SPAN style="COLOR: #000000">, 
p1);</SPAN></DIV><BR>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;p2 = (</SPAN><SPAN 
style="COLOR: #0000ff">char</SPAN><SPAN 
style="COLOR: #000000">*)ManagePool_Memory_Alloc(xmPool, </SPAN><SPAN 
style="COLOR: #09885a">200</SPAN><SPAN style="COLOR: #000000">);</SPAN><SPAN 
style="COLOR: #008000">/*分配内存，在可分配内，但pool中没有足够的内存空间*/</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;memcpy(p2, 
</SPAN><SPAN style="COLOR: #a31515">"p2"</SPAN><SPAN style="COLOR: #000000">, 
</SPAN><SPAN style="COLOR: #09885a">2</SPAN><SPAN 
style="COLOR: #000000">);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;printf(</SPAN><SPAN 
style="COLOR: #a31515">"%s\n"</SPAN><SPAN style="COLOR: #000000">, 
p2);</SPAN></DIV><BR>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;ManagePool_Memory_Free(xmPool, 
p1);</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;ManagePool_Memory_Free(xmPool, 
p2);</SPAN></DIV><BR>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;p3 = (</SPAN><SPAN 
style="COLOR: #0000ff">char</SPAN><SPAN 
style="COLOR: #000000">*)ManagePool_Memory_Alloc(xmPool, </SPAN><SPAN 
style="COLOR: #09885a">624</SPAN><SPAN style="COLOR: #000000">);</SPAN><SPAN 
style="COLOR: #008000">//分配大内存</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;memcpy(p3, 
</SPAN><SPAN style="COLOR: #a31515">"p3"</SPAN><SPAN style="COLOR: #000000">, 
</SPAN><SPAN style="COLOR: #09885a">2</SPAN><SPAN 
style="COLOR: #000000">);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;printf(</SPAN><SPAN 
style="COLOR: #a31515">"%s\n"</SPAN><SPAN style="COLOR: #000000">, 
p3);</SPAN></DIV><BR>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;p4 = (</SPAN><SPAN 
style="COLOR: #0000ff">char</SPAN><SPAN 
style="COLOR: #000000">*)ManagePool_Memory_Alloc(xmPool, </SPAN><SPAN 
style="COLOR: #09885a">100</SPAN><SPAN style="COLOR: #000000">);</SPAN><SPAN 
style="COLOR: #008000">//分配内存</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;memcpy(p4, 
</SPAN><SPAN style="COLOR: #a31515">"p4"</SPAN><SPAN style="COLOR: #000000">, 
</SPAN><SPAN style="COLOR: #09885a">2</SPAN><SPAN 
style="COLOR: #000000">);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;printf(</SPAN><SPAN 
style="COLOR: #a31515">"%s\n"</SPAN><SPAN style="COLOR: #000000">, 
p4);</SPAN></DIV><BR>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">char</SPAN><SPAN style="COLOR: #000000">* p5 = 
(</SPAN><SPAN style="COLOR: #0000ff">char</SPAN><SPAN 
style="COLOR: #000000">*)ManagePool_Memory_Alloc(xmPool, </SPAN><SPAN 
style="COLOR: #09885a">4000</SPAN><SPAN style="COLOR: #000000">);</SPAN><SPAN 
style="COLOR: #008000">//分配内存</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;memcpy(p5, 
</SPAN><SPAN style="COLOR: #a31515">"p5"</SPAN><SPAN style="COLOR: #000000">, 
</SPAN><SPAN style="COLOR: #09885a">2</SPAN><SPAN 
style="COLOR: #000000">);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;printf(</SPAN><SPAN 
style="COLOR: #a31515">"%s,%s\n"</SPAN><SPAN style="COLOR: #000000">, p5, 
p4);</SPAN></DIV><BR>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">char</SPAN><SPAN style="COLOR: #000000">* p6 = 
(</SPAN><SPAN style="COLOR: #0000ff">char</SPAN><SPAN 
style="COLOR: #000000">*)ManagePool_Memory_Alloc(xmPool, </SPAN><SPAN 
style="COLOR: #09885a">5000</SPAN><SPAN style="COLOR: #000000">);</SPAN><SPAN 
style="COLOR: #008000">//分配大内存</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;memcpy(p6, 
</SPAN><SPAN style="COLOR: #a31515">"p6"</SPAN><SPAN style="COLOR: #000000">, 
</SPAN><SPAN style="COLOR: #09885a">2</SPAN><SPAN 
style="COLOR: #000000">);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;printf(</SPAN><SPAN 
style="COLOR: #a31515">"%s,%s\n"</SPAN><SPAN style="COLOR: #000000">, p6, 
p4);</SPAN></DIV><BR>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;ManagePool_Memory_Free(xmPool, 
p6);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">char</SPAN><SPAN style="COLOR: #000000">* p7 = 
(</SPAN><SPAN style="COLOR: #0000ff">char</SPAN><SPAN 
style="COLOR: #000000">*)ManagePool_Memory_Alloc(xmPool, </SPAN><SPAN 
style="COLOR: #09885a">5000</SPAN><SPAN style="COLOR: #000000">);</SPAN><SPAN 
style="COLOR: #008000">//分配大内存</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;memcpy(p7, 
</SPAN><SPAN style="COLOR: #a31515">"p7"</SPAN><SPAN style="COLOR: #000000">, 
</SPAN><SPAN style="COLOR: #09885a">2</SPAN><SPAN 
style="COLOR: #000000">);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;printf(</SPAN><SPAN 
style="COLOR: #a31515">"%s,%s,%s\n"</SPAN><SPAN style="COLOR: #000000">, p7, p4, 
p5);</SPAN></DIV><BR>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;st_Cleanup.fpCall_Cleanup = 
&amp;fun;</SPAN></DIV>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;ManagePool_Memory_CleanupAdd(xmPool, 
&amp;st_Cleanup);</SPAN><SPAN 
style="COLOR: #008000">/*注册销毁回调函数*/</SPAN></DIV><BR>
<DIV><SPAN 
style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;ManagePool_Memory_Destory(xmPool);</SPAN><SPAN 
style="COLOR: #008000">/*pool池注销*/</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;printf(</SPAN><SPAN 
style="COLOR: #a31515">"\n"</SPAN><SPAN style="COLOR: #000000">);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">return</SPAN><SPAN style="COLOR: #000000"> </SPAN><SPAN 
style="COLOR: #09885a">0</SPAN><SPAN style="COLOR: #000000">;</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">}</SPAN></DIV></DIV></body>
</html>
