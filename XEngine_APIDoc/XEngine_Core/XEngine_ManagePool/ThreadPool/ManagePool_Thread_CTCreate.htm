<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>ManagePool_Thread_CTCreate</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 11pt;
}
</style>

</head>

<body>
<H1 >
 函数</H1>
<P >
  ManagePool_Thread_CTCreate</P>

<H1>功能</H1> 
 <P>             创建竞争模式线程池</P>
<H1>语法</H1>
<P>BOOL ManagePool_Thread_CTCreate(int nThreadCount = 0, int 
nMaxTask = 10000, BOOL bIsClear = TRUE)</P>
<P></P>
<P></P>
<H1>参数</H1>
<P>&nbsp;参数.一：nThreadCount<BR>&nbsp; In/Out：In<BR>&nbsp; 
类型：整数型<BR>&nbsp; 可空：Y<BR>&nbsp; 
意思：可运行线程池数量,如果为0,那么表示自动获取当前CPU核心数<BR>&nbsp;参数.二：nMaxTask<BR>&nbsp; 
In/Out：In<BR>&nbsp; 类型：整数型<BR>&nbsp; 可空：Y<BR>&nbsp; 
意思：每个线程最多可运行执行多少任务，默认10000<BR>&nbsp;参数.三：bIsClear<BR>&nbsp; In/Out：In<BR>&nbsp; 
类型：逻辑型<BR>&nbsp; 可空：Y<BR>&nbsp; 意思：超过指定任务大小是否清理任务池，默认为真</P>
<P></P>
<H1>返回值</H1>
<P>类型：逻辑型<BR>意思：是否成功</P>
<H1>备注</H1>
<P>&nbsp;</P>
<H1>示例</H1> 
<DIV 
style="FONT-SIZE: 12px; FONT-FAMILY: Consolas, 'Courier New', monospace; WHITE-SPACE: pre; FONT-WEIGHT: normal; COLOR: #000000; LINE-HEIGHT: 16px; BACKGROUND-COLOR: #fffffe"><DIV> <SPAN style="COLOR: #0000ff">void</SPAN> 
<SPAN style="COLOR: #000000"> 
ThreadPool_Test()</SPAN></DIV> <DIV>
<SPAN style="COLOR: #000000">{</SPAN></DIV>
<DIV>
<SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;XNETHANDLE xhPool =</SPAN><SPAN 
style="COLOR: #09885a">0</SPAN>
<SPAN style="COLOR: #000000">;</SPAN>
<BR></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;ManagePool_Thread_CTCreate(</SPAN><SPAN 
style="COLOR: #09885a">2</SPAN><SPAN style="COLOR: #000000">);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN style="COLOR: #0000ff">for</SPAN><SPAN style="COLOR: #000000"> 
(</SPAN><SPAN style="COLOR: #0000ff">int</SPAN><SPAN 
style="COLOR: #000000"> i = </SPAN><SPAN 
style="COLOR: #09885a">0</SPAN><SPAN style="COLOR: #000000">; i &lt; </SPAN><SPAN style="COLOR: #09885a">100</SPAN><SPAN style="COLOR: #000000">; 
i++)</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;{</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
style="COLOR: #0000ff">int</SPAN><SPAN 
style="COLOR: #000000">* pInt = (</SPAN><SPAN 
style="COLOR: #0000ff">int</SPAN><SPAN 
style="COLOR: #000000">*)malloc(</SPAN><SPAN 
style="COLOR: #0000ff">sizeof</SPAN><SPAN 
style="COLOR: #000000">(</SPAN><SPAN style="COLOR: #0000ff">int</SPAN><SPAN style="COLOR: #000000">));</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*pInt = 
i;</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ManagePool_Thread_CTPostTask(ManagePool_ThreadPool, 
pInt);</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;}</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;std::this_thread::sleep_for(std::chrono::seconds(</SPAN><SPAN 
style="COLOR: #09885a">1</SPAN><SPAN style="COLOR: #000000">));</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">&nbsp;&nbsp;&nbsp;&nbsp;ManagePool_Thread_CTDestroy();</SPAN></DIV>
<DIV><SPAN style="COLOR: #000000">}</SPAN></DIV></DIV></body>
</html>
